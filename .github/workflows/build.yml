# On push to main branch, this workflow will run tests, build and push the builds artifact into another branch.
name: Build React backend

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [16.x]

    steps:
#       - uses: actions/checkout@v3
#       - name: Use Node.js ${{ matrix.node-version }} and Build üì¶
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#           cache: "npm"
#       - run: npm ci --ignore-scripts
#       - run: npm i @mbzcloud-test/mbzcloud-web-comp@latest
#       - run: npm run build --if-present
#         env:
#           GITHUB_PKG_AUTH_TOKEN: ${{ secrets.GH_PACKAGE_PAT }}

      - name: Clone repository üîç
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Install dependencies and Build üì¶
        run: |
          npm ci --ignore-scripts
          npm i @mbzcloud-test/mbzcloud-web-comp@latest
          npm run build --if-present
        env:
          GITHUB_PKG_AUTH_TOKEN: ${{ secrets.GH_PACKAGE_PAT }}

      #- run: npm test

      - name: "Upload Artifact"
        uses: actions/upload-artifact@v3
        with:
          #name: build
          path: build
          retention-days: 5

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
        id: download
        # with:
        #   #name: build
        #   path: src

      - name: "Echo download path"
        run: echo ${{steps.download.outputs.download-path}}

      # Store artifacts to other repo
      - name: Deploy to other repo
        uses: manzoorwanijk/action-deploy-to-repo@master
        with:
          src_dir: build
          target_owner: mbzcloud-test
          target_repo: test-react-app
          target_dir: infrastructure/web-client
          target_branch: build-artf
          # Optional
          access_token: ${{ secrets.GH_PACKAGE_PAT }}
          cleanup_command: "rm -rf assets/* && rm -f assets/asset-manifest.json"
